<?xml version="1.0"?>

<robot name="balancing_robot"
    xmlns:xacro="http://ros.org/wiki/xacro">


    <xacro:property name="pi" value="3.1415926"/>
    <xacro:property name="base_link_length" value="0.4"/>
    <xacro:property name="base_link_radius" value="0.01"/>
    <xacro:property name="wheel_radius" value="0.1"/>
    <xacro:property name="wheel_width" value="0.02"/>
    <xacro:property name="support_x" value="0.01"/>
    <xacro:property name="support_y" value="0.1"/>
    <xacro:property name="support_z" value="0.13"/>
    <xacro:property name="UAV_x" value="0.4"/>
    <xacro:property name="UAV_y" value="0.4"/>
    <xacro:property name="UAV_z" value="0.05"/>

    <material name="red">
        <color rgba="1.0 0.0 0.0 1.0"/>
    </material>
    <material name="green">
        <color rgba="0.0 1.0 0.0 1.0"/>
    </material>
    <material name="blue">
        <color rgba="0.0 0.0 1.0 1.0"/>
    </material>
    <material name="yellow">
        <color rgba="1.0 1.0 0.0 1.0"/>
    </material>
    <material name="cyan">
        <color rgba="0.0 1.0 1.0 1.0"/>
    </material>
    <material name="orange">
        <color rgba="1.0 0.5 0.0 1.0"/>
    </material>
    <material name="purple">
        <color rgba="0.5 0.0 0.5 1.0"/>
    </material>
    <material name="white">
        <color rgba="1 1 1 1.0"/>
    </material>


    <!-- Virtual linkage, as specifying inertia on the base_link is not supported -->
    <link name="dummy_link">
        <visual>
            <geometry>
                <sphere radius="0.01"/>
            </geometry>
            <!-- <material name="dummy_link_color">
                <color rgba="0.5 0.2 0.5 1" />
            </material> -->
            <!-- 这里是rviz显示的颜色 -->
            <material name="red"/>
        </visual>
    </link>
    <gazebo reference="dummy_link">
        <material>Gazebo/Red</material>
    </gazebo>


    <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <material name="yellow"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.001336" ixy="0.0" ixz="0.0" iyy="0.001336" iyz="0.0" izz="0.000005"/>
        </inertial>
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Yellow</material>
    </gazebo>

    <joint name="dummy_to_base" type="fixed">
        <parent link="dummy_link"/>
        <child link="base_link"/>
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>


    <xacro:macro name="wheel_func" params="direc pos">
        <link name="${pos}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <material name="green"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            </collision>
            <inertial>
                <mass value="0.5"/>
                <inertia ixx="0.00127" ixy="0.0" ixz="0.0" iyy="0.00127" iyz="0.0" izz="0.0025"/>
            </inertial>
        </link>

        <joint name="base_to_${pos}_wheel" type="continuous">
            <parent link="base_link"/>
            <child link="${pos}_wheel"/>
            <origin xyz="0 ${direc * base_link_length/2} 0" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>

        <gazebo reference="${pos}_wheel">
            <mu1 value="2"/>
            <mu2 value="1"/>
            <material>Gazebo/Green</material>
        </gazebo>

        <transmission name="${pos}_wheel_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="base_to_${pos}_wheel">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="${pos}_wheel_motor">
                <mechanicalReduction>1.0</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <xacro:wheel_func direc="1" pos="left"/>
    <xacro:wheel_func direc="-1" pos="right"/>


    <link name="support">
        <visual>
            <geometry>
                <box size="${support_x} ${support_y} ${support_z}"/>
            </geometry>
            <origin xyz="0 0 0"/>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <box size="${support_x} ${support_y} ${support_z}"/>
            </geometry>
            <origin xyz="0 0 0"/>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.00083" ixy="0.0" ixz="0.0" iyy="0.00075" iyz="0.0" izz="0.00008"/>
        </inertial>
    </link>

    <gazebo reference="support">
        <material>Gazebo/Blue</material>
    </gazebo>

    <joint name="base_to_support" type="fixed">
        <parent link="base_link"/>
        <child link="support"/>
        <origin xyz="0 0 ${support_z/2}" rpy="0 0 0"/>
    </joint>


    <link name="UAV">
        <visual name="">
            <geometry>
                <box size="${UAV_x} ${UAV_y} ${UAV_z}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <box size="${UAV_x} ${UAV_y} ${UAV_z}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>
        <inertial>
            <mass value="4"/>
            <inertia ixx="0.05417" ixy="0.0" ixz="0.0" iyy="0.05417" iyz="0.0" izz="0.10667"/>
        </inertial>
    </link>
    <gazebo reference="UAV">
        <material>Gazebo/White</material>
    </gazebo>

    <joint name="UAV_to_support" type="fixed">
        <parent link="support"/>
        <child link="UAV"/>
        <origin xyz="0 0 ${support_z/2}" rpy="0 0 0"/>
    </joint>



    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>


    <gazebo reference="support">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>50</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu/data</topicName>
                <bodyName>body_link</bodyName>
                <updateRateHZ>50.0</updateRateHZ>
                <gaussianNoise>0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
            </plugin>
            <pose>1 0 0 0 0 0</pose>
        </sensor>
    </gazebo>

</robot>

